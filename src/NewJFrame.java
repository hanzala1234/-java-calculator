
import java.awt.Button;
import java.awt.Color;
import java.awt.Event;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Toolkit;
import static java.awt.Toolkit.getDefaultToolkit;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.Cursor;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.InputMap;
import javax.swing.JButton;

import javax.swing.text.*;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.JViewport;
import javax.swing.KeyStroke;
import javax.swing.Timer;
import javax.swing.colorchooser.AbstractColorChooserPanel;





/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ok
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    double basicSalary;
  double allownces ;
  double  total;
  double deduction;
  Rule columnview ;
  Rule rowview;
  
    StringBuilder Display = new StringBuilder(0);
   
    public NewJFrame() {
        initComponents();
  
System.out.println(multiply2.getSize().width);

   ResultScreen.setCursor(java.awt.Cursor.getDefaultCursor());
       ((AbstractDocument)ResultScreen.getDocument()).setDocumentFilter(new NumberFilter(ResultScreen));
   MutableAttributeSet attr = new SimpleAttributeSet();
                StyleConstants.setAlignment(attr, StyleConstants.ALIGN_RIGHT);
                ResultScreen.setParagraphAttributes(attr, false);
                
     
     class NoTextSelectionCaret extends DefaultCaret
{
    public NoTextSelectionCaret(JTextComponent textComponent)
    {
        setBlinkRate( textComponent.getCaret().getBlinkRate() );
        textComponent.setHighlighter( null );
    }

    @Override
    public int getMark()
    {
        return getDot();
    }
    
     
     }
        ResultScreen.setCaret(new NoTextSelectionCaret(ResultScreen));
           
  addbinding();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        box = new javax.swing.JDialog();
        ccl = new javax.swing.JColorChooser();
        ok = new java.awt.Button();
        cancel = new java.awt.Button();
        reset = new java.awt.Button();
        imageIcon1 = new javax.swing.ImageIcon();
        multiply3 = new javax.swing.JButton();
        multiply5 = new javax.swing.JButton();
        multiply8 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        result = new javax.swing.JButton();
        subtract = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        multiply1 = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        ResultScreen = new javax.swing.JTextPane();
        ResultLabel = new javax.swing.JLabel();
        multiply2 = new javax.swing.JButton();
        multiply4 = new javax.swing.JButton();
        multiply6 = new javax.swing.JButton();
        multiply7 = new javax.swing.JButton();
        multiply9 = new javax.swing.JButton();
        multiply10 = new javax.swing.JButton();
        multiply11 = new javax.swing.JButton();
        multiply12 = new javax.swing.JButton();
        multiply13 = new javax.swing.JButton();
        multiply14 = new javax.swing.JButton();
        multiply15 = new javax.swing.JButton();
        multiply16 = new javax.swing.JButton();
        multiply17 = new javax.swing.JButton();

        box.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        box.setTitle("choose color");
        box.setAlwaysOnTop(true);
        box.setBounds(new java.awt.Rectangle(10, 10, 40, 40));
        box.setSize(new java.awt.Dimension(20, 20));

        ccl.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "color chooser", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Vani", 0, 14), new java.awt.Color(255, 51, 0))); // NOI18N

        ok.setLabel("ok");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        cancel.setLabel("cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        reset.setLabel("reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout boxLayout = new javax.swing.GroupLayout(box.getContentPane());
        box.getContentPane().setLayout(boxLayout);
        boxLayout.setHorizontalGroup(
            boxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ccl, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(boxLayout.createSequentialGroup()
                        .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        boxLayout.setVerticalGroup(
            boxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ccl, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(boxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        multiply3.setAction(new buttonAction());
        multiply3.setBackground(new java.awt.Color(51, 51, 51));
        multiply3.setForeground(new java.awt.Color(255, 255, 255));
        multiply3.setText("1");
        multiply3.setBorderPainted(false);
        multiply3.setContentAreaFilled(false);
        multiply3.setOpaque(true);
        multiply3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply3ActionPerformed(evt);
            }
        });

        multiply5.setAction(new buttonAction());
        multiply5.setBackground(new java.awt.Color(51, 51, 51));
        multiply5.setForeground(new java.awt.Color(255, 255, 255));
        multiply5.setText("1");
        multiply5.setBorderPainted(false);
        multiply5.setContentAreaFilled(false);
        multiply5.setOpaque(true);
        multiply5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply5ActionPerformed(evt);
            }
        });

        multiply8.setAction(new buttonAction());
        multiply8.setBackground(new java.awt.Color(51, 51, 51));
        multiply8.setForeground(new java.awt.Color(255, 255, 255));
        multiply8.setText("1");
        multiply8.setBorderPainted(false);
        multiply8.setContentAreaFilled(false);
        multiply8.setOpaque(true);
        multiply8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply8ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("M.H calculator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/calculator-interface-designs-11.png")).getImage());
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        setResizable(false);
        setState(1);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(12, 11, 11));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        add.setBackground(new java.awt.Color(255, 0, 0));
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("+");
        add.setBorderPainted(false);
        add.setContentAreaFilled(false);
        add.setMargin(new java.awt.Insets(2, 10, 2, 10));
        add.setOpaque(true);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        result.setBackground(new java.awt.Color(255, 153, 0));
        result.setForeground(new java.awt.Color(255, 255, 255));
        result.setText("=");
        result.setBorderPainted(false);
        result.setContentAreaFilled(false);
        result.setOpaque(true);
        result.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultActionPerformed(evt);
            }
        });
        result.setOpaque(true);

        subtract.setBackground(new java.awt.Color(255, 0, 0));
        subtract.setForeground(new java.awt.Color(255, 255, 255));
        subtract.setText("-");
        subtract.setBorderPainted(false);
        subtract.setContentAreaFilled(false);
        subtract.setOpaque(true);
        subtract.setPreferredSize(new java.awt.Dimension(9909, 23));
        subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }
        });

        multiply.setBackground(new java.awt.Color(255, 0, 0));
        multiply.setForeground(new java.awt.Color(255, 255, 255));
        multiply.setText("x");
        multiply.setBorderPainted(false);
        multiply.setContentAreaFilled(false);
        multiply.setMargin(new java.awt.Insets(2, 10, 2, 10));
        multiply.setOpaque(true);
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        divide.setBackground(new java.awt.Color(255, 0, 0));
        divide.setForeground(new java.awt.Color(255, 255, 255));
        divide.setText("/");
        divide.setBorderPainted(false);
        divide.setContentAreaFilled(false);
        divide.setOpaque(true);
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        multiply1.setBackground(new java.awt.Color(255, 0, 0));
        multiply1.setForeground(new java.awt.Color(255, 255, 255));
        multiply1.setText("ac");
        multiply1.setBorderPainted(false);
        multiply1.setContentAreaFilled(false);
        multiply1.setMargin(new java.awt.Insets(2, 10, 2, 10));
        multiply1.setOpaque(true);
        multiply1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply1ActionPerformed(evt);
            }
        });

        jLayeredPane1.setBackground(new java.awt.Color(51, 51, 51));
        jLayeredPane1.setMaximumSize(new java.awt.Dimension(282, 61));
        jLayeredPane1.setOpaque(true);

        ResultScreen.setBackground(new java.awt.Color(51, 51, 51));
        ResultScreen.setBorder(null);
        ResultScreen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ResultScreen.getCaret().setVisible(true);
        ResultScreen.setForeground(new java.awt.Color(255, 255, 255));
        ResultScreen.setMargin(new java.awt.Insets(3, 7, 3, 9));
        ResultScreen.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                ResultScreenCaretUpdate(evt);
            }
        });
        ResultScreen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ResultScreenKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ResultScreenKeyTyped(evt);
            }
        });

        ResultLabel.setForeground(new java.awt.Color(255, 255, 255));
        ResultLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        ResultLabel.setMaximumSize(new java.awt.Dimension(40, 0));

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ResultScreen)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane1.setLayer(ResultScreen, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ResultLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        multiply2.setAction(new buttonAction());
        multiply2.setBackground(new java.awt.Color(51, 51, 51));
        multiply2.setForeground(new java.awt.Color(255, 255, 255));
        multiply2.setText("2");
        multiply2.setBorderPainted(false);
        multiply2.setContentAreaFilled(false);
        multiply2.setOpaque(true);
        multiply2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply2ActionPerformed(evt);
            }
        });

        multiply4.setAction(new buttonAction());
        multiply4.setBackground(new java.awt.Color(51, 51, 51));
        multiply4.setForeground(new java.awt.Color(255, 255, 255));
        multiply4.setText("3");
        multiply4.setBorderPainted(false);
        multiply4.setContentAreaFilled(false);
        multiply4.setOpaque(true);
        multiply4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply4ActionPerformed(evt);
            }
        });

        multiply6.setAction(new buttonAction());
        multiply6.setBackground(new java.awt.Color(51, 51, 51));
        multiply6.setForeground(new java.awt.Color(255, 255, 255));
        multiply6.setText("6");
        multiply6.setBorderPainted(false);
        multiply6.setContentAreaFilled(false);
        multiply6.setOpaque(true);
        multiply6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply6ActionPerformed(evt);
            }
        });

        multiply7.setAction(new buttonAction());
        multiply7.setBackground(new java.awt.Color(51, 51, 51));
        multiply7.setForeground(new java.awt.Color(255, 255, 255));
        multiply7.setText("1");
        multiply7.setBorderPainted(false);
        multiply7.setContentAreaFilled(false);
        multiply7.setOpaque(true);
        multiply7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply7ActionPerformed(evt);
            }
        });

        multiply9.setAction(new buttonAction());
        multiply9.setBackground(new java.awt.Color(51, 51, 51));
        multiply9.setForeground(new java.awt.Color(255, 255, 255));
        multiply9.setText("5");
        multiply9.setBorderPainted(false);
        multiply9.setContentAreaFilled(false);
        multiply9.setOpaque(true);
        multiply9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply9ActionPerformed(evt);
            }
        });

        multiply10.setAction(new buttonAction());
        multiply10.setBackground(new java.awt.Color(51, 51, 51));
        multiply10.setForeground(new java.awt.Color(255, 255, 255));
        multiply10.setText("4");
        multiply10.setBorderPainted(false);
        multiply10.setContentAreaFilled(false);
        multiply10.setOpaque(true);
        multiply10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply10ActionPerformed(evt);
            }
        });

        multiply11.setAction(new buttonAction());
        multiply11.setBackground(new java.awt.Color(51, 51, 51));
        multiply11.setForeground(new java.awt.Color(255, 255, 255));
        multiply11.setText("9");
        multiply11.setBorderPainted(false);
        multiply11.setContentAreaFilled(false);
        multiply11.setOpaque(true);
        multiply11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply11ActionPerformed(evt);
            }
        });

        multiply12.setAction(new buttonAction());
        multiply12.setBackground(new java.awt.Color(51, 51, 51));
        multiply12.setForeground(new java.awt.Color(255, 255, 255));
        multiply12.setText("7");
        multiply12.setBorderPainted(false);
        multiply12.setContentAreaFilled(false);
        multiply12.setOpaque(true);
        multiply12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply12ActionPerformed(evt);
            }
        });

        multiply13.setAction(new buttonAction());
        multiply13.setBackground(new java.awt.Color(51, 51, 51));
        multiply13.setForeground(new java.awt.Color(255, 255, 255));
        multiply13.setText("0");
        multiply13.setBorderPainted(false);
        multiply13.setContentAreaFilled(false);
        multiply13.setOpaque(true);
        multiply13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply13ActionPerformed(evt);
            }
        });

        multiply14.setAction(new buttonAction());
        multiply14.setBackground(new java.awt.Color(51, 51, 51));
        multiply14.setForeground(new java.awt.Color(255, 255, 255));
        multiply14.setText("8");
        multiply14.setBorderPainted(false);
        multiply14.setContentAreaFilled(false);
        multiply14.setOpaque(true);
        multiply14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply14ActionPerformed(evt);
            }
        });

        multiply15.setAction(new buttonAction());
        multiply15.setBackground(new java.awt.Color(51, 51, 51));
        multiply15.setForeground(new java.awt.Color(255, 255, 255));
        multiply15.setText(".");
        multiply15.setBorderPainted(false);
        multiply15.setContentAreaFilled(false);
        multiply15.setOpaque(true);
        multiply15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply15ActionPerformed(evt);
            }
        });

        multiply16.setAction(new cancel());
        multiply16.setBackground(new java.awt.Color(255, 0, 0));
        multiply16.setForeground(new java.awt.Color(255, 255, 255));
        multiply16.setText("c");
        multiply16.setBorderPainted(false);
        multiply16.setContentAreaFilled(false);
        multiply16.setOpaque(true);
        multiply16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply16ActionPerformed(evt);
            }
        });

        multiply17.setAction(new newsign());
        multiply17.setBackground(new java.awt.Color(255, 0, 0));
        multiply17.setForeground(new java.awt.Color(255, 255, 255));
        multiply17.setText("+/-");
        multiply17.setBorderPainted(false);
        multiply17.setContentAreaFilled(false);
        multiply17.setMargin(new java.awt.Insets(2, 8, 2, 8));
        multiply17.setOpaque(true);
        multiply17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiply17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(multiply15)
                        .addGap(18, 18, 18)
                        .addComponent(multiply13, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(multiply10)
                                    .addGap(18, 18, 18)
                                    .addComponent(multiply9))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(multiply7)
                                    .addGap(18, 18, 18)
                                    .addComponent(multiply2))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(multiply12)
                                    .addGap(18, 18, 18)
                                    .addComponent(multiply14)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(multiply1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(multiply16)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(multiply11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(multiply6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(multiply4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(multiply17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(result)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(multiply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(subtract, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(divide, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(multiply16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(multiply2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(multiply6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(multiply9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(multiply10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(multiply11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(multiply12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(multiply14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(multiply13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        multiply1.setOpaque(true);
        multiply2.setOpaque(true);
        multiply2.setOpaque(true);
        multiply2.setOpaque(true);
        multiply2.setOpaque(true);
        multiply2.setOpaque(true);
        multiply10.setOpaque(true);
        multiply2.setOpaque(true);
        multiply2.setOpaque(true);
        multiply2.setOpaque(true);
        multiply2.setOpaque(true);
        multiply2.setOpaque(true);
        multiply1.setOpaque(true);
        multiply1.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed


// TODO add your handling code here:
    }//GEN-LAST:event_okActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
box.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
ccl.setColor(Color.white);
        // TODO add your handling code here:
    }//GEN-LAST:event_resetActionPerformed
javax.swing.JFileChooser er;
File file;boolean addition,subtraction,division,multiplication = false;
    double value1,value2;
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        double result = 0;
ResultScreen.requestFocus();
String text = ResultScreen.getText();

int cap=Display.length();



    if(first){

first = false;
         value1 = Double.parseDouble(ResultScreen.getText());
 Display.append(String.valueOf(value1)+"+");
         System.out.println("value1 "+value1);
         System.out.println("value2 "+value2); 
    
        
         ResultLabel.setText(String.valueOf(Display));
    
       }else{
                         
      
     try{
   
   value2 = Double.parseDouble(text);
   
     }  catch(NumberFormatException e){
 subtraction = false;
        addition=true;
       division =false;
       multiplication = false;
       Display.deleteCharAt(Display.length()-1);
       Display.insert(Display.length(), '+');
       ResultLabel.setText(String.valueOf(Display));
       return;
         
}
  boolean capacity = Display.length()<34;
          if(capacity){
         Display.append(String.valueOf(value2)+"+");
          capacity = Display.length()<34;
          cap=Display.length();
          }
          if(!capacity)
          {
                 Display.append(String.valueOf(value2)+"+");
              int NORW=Display.length()-34;
              System.out.println("NORW:  "+NORW);
              Display.delete(0, NORW);
          
              
          }
        
        
        ResultLabel.setText(String.valueOf(Display));
      
      if(subtraction){
      result = value1-value2;  
      }
     else if(division){
      result = value1/value2;  
      }
    else  if(multiplication){
      result = value1*value2;  
      }
   
       else{  
         result = value1+value2;
       }
      
      value1=result;
      System.out.println("length "+Display.length());
      
    } 

       
 
            
        ResultScreen.setText("");
       
        subtraction = false;
        addition=true;
       division =false;
       multiplication = false;
        
          
    }//GEN-LAST:event_addActionPerformed
boolean results;
    private void resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultActionPerformed
ResultScreen.requestFocus();
results = true;
Display.delete(0, Display.length());
int offset = ResultScreen.getText().indexOf(System.lineSeparator());
SimpleAttributeSet asa = new SimpleAttributeSet();
StyleConstants.setAlignment(asa, StyleConstants.ALIGN_CENTER);
StyleConstants.setForeground(asa, Color.red);
double result=0;

try{
       value2 = Double.parseDouble(  ResultScreen.getText());
}catch(NumberFormatException e ){}  

      if(addition){
      result = value1+value2;  
      }
      if(subtraction){
      result = value1-value2;  
      }
      if(division){
      result = value1/value2;  
      }
      if(multiplication){
      result = value1*value2;  
      }
      System.out.println("result "+String.valueOf(result));
    
       // try {
        //    ResultScreen.getDocument().insertString(0, String.valueOf(result), asa);
     
      addition =false;
      subtraction = false;
      multiplication = false;
      division=false;
     ResultScreen.setText(String.valueOf(result));
     ResultLabel.setText(Display.toString());
      ResultScreen.requestFocus();
      value1=0;
      first = true;
    }//GEN-LAST:event_resultActionPerformed
boolean first=true;
    private void subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractActionPerformed

        double result = 0;
ResultScreen.requestFocus();
try{      
           if(first){
 first = false;

         value1 = Double.parseDouble(ResultScreen.getText());

     Display.append(String.valueOf(value1)+"-");
        ResultLabel.setText(String.valueOf(Display));
         System.out.println("value1 "+value1);
         System.out.println("value2 "+value2); 
       }
                 
else{


        
     try{
   
   value2 = Double.parseDouble(ResultScreen.getText());
     }  catch(NumberFormatException e){
         
 subtraction = true;
        addition=false;
       division =false;
       multiplication = false;
       Display.deleteCharAt(Display.length()-1);
       Display.insert(Display.length(), '-');
       ResultLabel.setText(String.valueOf(Display));
       return;
         
}

       
      if(addition){
      result = value1+value2;  
      }
       else if(subtraction){
      result = value1-value2;  
      }
     else if(division){
      result = value1/value2;  
      }
    else  if(multiplication){
      result = value1*value2;  
      }
      int cap = Display.length();
   boolean capacity = cap<34;
         if(capacity){
        
             Display.append(String.valueOf(value2)+"-");
           capacity = Display.length()<34;
          cap=Display.length();
         }if(!capacity){
          Display.append(String.valueOf(value2)+"-");    
              int NORW=Display.length()-34;
              System.out.println("NORW:  "+NORW);
              Display.delete(0, NORW);
          
              
          }
        ResultLabel.setText(String.valueOf(Display));
      value1=result;
      System.out.println("value1 "+value1);
         System.out.println("value2 "+value2); 
         System.out.println("length "+Display.length()); 

        }}catch(NumberFormatException e ){
        
       subtraction = true;
        addition=false;
       division =false;
       multiplication = false;     
            return ;
        
        }



       ResultScreen.setText("");
       subtraction = true;
        addition=false;
       division =false;
       multiplication = false;

    }//GEN-LAST:event_subtractActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
double result = 0;
ResultScreen.requestFocus();
       try{
           System.out.println(ResultScreen.getText().equals(null));
           if(first){
first =false;
               value1 = Double.parseDouble(ResultScreen.getText());
       System.out.println("value1 "+value1);
         System.out.println("value2 "+value2); 
          Display.append(String.valueOf(value1)+"*");
        ResultLabel.setText(String.valueOf(Display));
       }
           else{
                 
      
             try{
   
   value2 = Double.parseDouble(ResultScreen.getText());
     }  catch(NumberFormatException e){
 subtraction = false;
        addition=false;
       division =false;
       multiplication = true;
       Display.deleteCharAt(Display.length()-1);
       Display.insert(Display.length(), '*');
       ResultLabel.setText(String.valueOf(Display));
       return;
         
}
       
      if(addition){
      result = value1+value2;  
      }
       else if(subtraction){
      result = value1-value2;  
      }
     else if(division){
      result = value1/value2;  
      }
    else  if(multiplication){
      result = value1*value2;  
      }
    int cap = Display.length();
   boolean capacity = cap<34;
         if(capacity){
         Display.append(String.valueOf(value2)+"*");
           capacity = Display.length()<34;
          cap=Display.length();
         }
         if(!capacity){
              Display.append(String.valueOf(value2)+"*");
              int NORW=Display.length()-34;
              System.out.println("NORW:  "+NORW);
              Display.delete(0, NORW);
          
              
          }
        ResultLabel.setText(String.valueOf(Display));
       
      value1=result;
      System.out.println("value1 "+value1);
         System.out.println("value2 "+value2); 
         System.out.println("result "+result); 
} 
       }catch(NumberFormatException e){
return;       
}
       ResultScreen.setText("");
       subtraction = false;
        addition=false;
       division =false;
       multiplication = true;
            // TODO add your handling code here:
    }//GEN-LAST:event_multiplyActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
double result = 0;
ResultScreen.requestFocus();
       try{
           if(first){
               first = false;
         value1 = Double.parseDouble(ResultScreen.getText());
       System.out.println("value1 "+value1);
         System.out.println("value2 "+value2); 
       Display.append(String.valueOf(value1)+"/");
        ResultLabel.setText(String.valueOf(Display));
           }else{
                 
      
          try{
   
   value2 = Double.parseDouble(ResultScreen.getText());
     }  catch(NumberFormatException e){
 subtraction = false;
        addition=false;
       division =true;
       multiplication = false;
       Display.deleteCharAt(Display.length()-1);
       Display.insert(Display.length(), '/');
       ResultLabel.setText(String.valueOf(Display));
       return;
         
}
    
          
      if(addition){
      result = value1+value2;  
      }
       else if(subtraction){
      result = value1-value2;  
      }
     else if(division){
      result = value1/value2;  
      }
    else  if(multiplication){
      result = value1*value2;  
      }
   
      value1=result;
      System.out.println("value1 "+value1);
         System.out.println("value2 "+value2); 
         System.out.println("result "+result);
        int cap = Display.length();
   boolean capacity = cap<34;
         if(capacity){
         Display.append(String.valueOf(value2)+"/");
           capacity = Display.length()<34;
          cap=Display.length();
         }if(!capacity){
              Display.append(String.valueOf(value2)+"/");
              int NORW=Display.length()-34;
              System.out.println("NORW:  "+NORW);
              Display.delete(0, NORW);
          
              
          }
        ResultLabel.setText(String.valueOf(Display));
} 
       }catch(NumberFormatException e){
return;       
}
       ResultScreen.setText("");
       subtraction = false;
        addition=false;
       division =true;
       multiplication = false;
        
    }//GEN-LAST:event_divideActionPerformed
class buttonAction extends AbstractAction{

        @Override
        public void actionPerformed(ActionEvent e) {
             try {
     if(results){
ResultScreen.setText(null);
results = false;
}
            JButton jb = (JButton)e.getSource();
            ResultScreen.getDocument().insertString(ResultScreen.getCaretPosition(),jb.getLabel(), null);
        } catch (BadLocationException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        }

}
    private void multiply1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply1ActionPerformed
first = true;
        value1=0;
value2=0;
Display.delete(0, Display.length());
ResultLabel.setText(null);
ResultScreen.setText(null);
ResultScreen.requestFocus();
    }//GEN-LAST:event_multiply1ActionPerformed
class cancel extends AbstractAction{

        @Override
        public void actionPerformed(ActionEvent e) {
         int of =ResultScreen.getText().length()-1;        
        try {
            ResultScreen.getDocument().remove(of, 1);
        } catch (BadLocationException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
ResultScreen.requestFocus();
        }

}
class newsign extends AbstractAction{

        @Override
        public void actionPerformed(ActionEvent e) {
            ResultScreen.requestFocus();
        try {
            String sign =  ResultScreen.getText(0, 1);
      
            if(sign.equals("-")){
        ResultScreen.getDocument().remove(0, 1);
        }else{
     
            ResultScreen.getDocument().insertString(0, "-", null);
        
        }
        
        } catch (BadLocationException ex) {
           System.out.println("Bad location exception is caught");
        }
        }
    }
    private void ResultScreenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ResultScreenKeyTyped

    }//GEN-LAST:event_ResultScreenKeyTyped

    private void ResultScreenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ResultScreenKeyPressed
       
 if(results){
if ((evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57) || (evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105)) { 
 ResultScreen.setText(null);
 results =false;
 }       }
       
 
    }//GEN-LAST:event_ResultScreenKeyPressed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped

    }//GEN-LAST:event_formKeyTyped

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
 
    }//GEN-LAST:event_formKeyPressed

    private void ResultScreenCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_ResultScreenCaretUpdate

ResultScreen.getCaret().moveDot(ResultScreen.getText().length());        // TODO add your handling code here:
    }//GEN-LAST:event_ResultScreenCaretUpdate

    private void multiply2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply2ActionPerformed

    private void multiply3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply3ActionPerformed

    private void multiply4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply4ActionPerformed

    private void multiply5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply5ActionPerformed

    private void multiply6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply6ActionPerformed

    private void multiply7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply7ActionPerformed

    private void multiply8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply8ActionPerformed

    private void multiply9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply9ActionPerformed

    private void multiply10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply10ActionPerformed

    private void multiply11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply11ActionPerformed

    private void multiply12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply12ActionPerformed

    private void multiply13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply13ActionPerformed

    private void multiply14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply14ActionPerformed

    private void multiply15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply15ActionPerformed

    private void multiply16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply16ActionPerformed

    private void multiply17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiply17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiply17ActionPerformed
void addbinding(){
//InputMap  inp = ResultScreen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
ResultScreen.getActionMap().put(3, new AbstractAction() {
           
    public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }}
        );
ResultScreen.getActionMap().put(7, new AbstractAction() {
           
    public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }}//subtract action
        );
ResultScreen.getActionMap().put(5, new AbstractAction() {
           
    public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }}//subtract action
        );
ResultScreen.getActionMap().put(6, new AbstractAction() {
           
    public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }}//subtract action
        );
    ResultScreen.getInputMap().put(KeyStroke.getKeyStroke("ADD"),
                            3);
    
    ResultScreen.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_EQUALS, Event.SHIFT_MASK),
                           3);
ResultScreen.getInputMap().put(KeyStroke.getKeyStroke("SUBTRACT"),
                            7);
    ResultScreen.getInputMap().put(KeyStroke.getKeyStroke("MINUS"),
                           7);
    ResultScreen.getInputMap().put(KeyStroke.getKeyStroke("MULTIPLY"),
                           5);
    ResultScreen.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_8, Event.SHIFT_MASK),
                           5);
    ResultScreen.getInputMap().put(KeyStroke.getKeyStroke("DIVIDE"),
                           6);
    ResultScreen.getInputMap().put(KeyStroke.getKeyStroke("SLASH"),
                           6);
  ResultScreen.getInputMap().put(KeyStroke.getKeyStroke("ENTER"),
                           new AbstractAction() {
           
    public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultActionPerformed(evt);
            }}//subtract action
        );
  
  ResultScreen.getInputMap().put(KeyStroke.getKeyStroke("EQUALS"),
                           new AbstractAction() {
           
    public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultActionPerformed(evt);
            }}//subtract action
        );


}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JTextPane ResultScreen;
    private javax.swing.JButton add;
    private javax.swing.JDialog box;
    private java.awt.Button cancel;
    private javax.swing.JColorChooser ccl;
    private javax.swing.JButton divide;
    private javax.swing.ImageIcon imageIcon1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton multiply;
    private javax.swing.JButton multiply1;
    private javax.swing.JButton multiply10;
    private javax.swing.JButton multiply11;
    private javax.swing.JButton multiply12;
    private javax.swing.JButton multiply13;
    private javax.swing.JButton multiply14;
    private javax.swing.JButton multiply15;
    private javax.swing.JButton multiply16;
    private javax.swing.JButton multiply17;
    private javax.swing.JButton multiply2;
    private javax.swing.JButton multiply3;
    private javax.swing.JButton multiply4;
    private javax.swing.JButton multiply5;
    private javax.swing.JButton multiply6;
    private javax.swing.JButton multiply7;
    private javax.swing.JButton multiply8;
    private javax.swing.JButton multiply9;
    private java.awt.Button ok;
    private java.awt.Button reset;
    private javax.swing.JButton result;
    private javax.swing.JButton subtract;
    // End of variables declaration//GEN-END:variables
}